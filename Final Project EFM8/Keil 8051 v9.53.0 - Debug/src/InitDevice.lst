C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SimplicityStudio\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\danih\OneDrive - ort b
                    -raude college of engineering\Desktop\מיקרו בקרים\v5_workspace\Middle Project\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXT
                    -END ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\danih\OneDri
                    -ve - ort braude college of engineering\Desktop\מיקרו בקרים\v5_workspace\Middle Project\inc;C:\Users\danih\OneDrive - ort
                    - braude college of engineering\Desktop\מיקרו בקרים\v5_workspace\Middle Project\inc\config;C:/SimplicityStudio/developer/
                    -sdks/8051/v4.2.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/dr
                    -ivers/efm8_memory_lcd/inc/graphics;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_memory_lcd/i
                    -nc/config;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/bsp;C:/SimplicityStudio/developer/sdks/8051/v4.2.3
                    -//kits/EFM8UB2_SLSTK2001A/config;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//Device/shared/si8051Base;C:/SimplicityS
                    -tudio/developer/sdks/8051/v4.2.3//Device/EFM8UB2/inc;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/drivers
                    -/efm8_joystick;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_rgb_led;C:/SimplicityStudio/deve
                    -loper/sdks/8051/v4.2.3//Device/EFM8UB2/peripheral_driver/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH
                    -(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB2_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        PCA_0_enter_DefaultMode_from_RESET ();
  29   1        PCACH_0_enter_DefaultMode_from_RESET ();
  30   1        PCACH_1_enter_DefaultMode_from_RESET ();
  31   1        PCACH_2_enter_DefaultMode_from_RESET ();
  32   1        PORTS_0_enter_DefaultMode_from_RESET ();
  33   1        PORTS_1_enter_DefaultMode_from_RESET ();
  34   1        PORTS_2_enter_DefaultMode_from_RESET ();
  35   1        PORTS_3_enter_DefaultMode_from_RESET ();
  36   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  37   1        ADC_0_enter_DefaultMode_from_RESET ();
  38   1        VREF_0_enter_DefaultMode_from_RESET ();
  39   1        RSTSRC_0_enter_DefaultMode_from_RESET ();
  40   1        HFOSC_0_enter_DefaultMode_from_RESET ();
  41   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  42   1        CIP51_0_enter_DefaultMode_from_RESET ();
  43   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  44   1        TIMER16_3_enter_DefaultMode_from_RESET ();
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 2   

  45   1        TIMER16_5_enter_DefaultMode_from_RESET ();
  46   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  47   1        SPI_0_enter_DefaultMode_from_RESET ();
  48   1        UARTE_1_enter_DefaultMode_from_RESET ();
  49   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  50   1        // Restore the SFRPAGE
  51   1        SFRPAGE = SFRPAGE_save;
  52   1        // [Config Calls]$
  53   1      
  54   1      }
  55          
  56          //================================================================================
  57          // PCA_0_enter_DefaultMode_from_RESET
  58          //================================================================================
  59          extern void
  60          PCA_0_enter_DefaultMode_from_RESET (void)
  61          {
  62   1        // $[PCA0MD - PCA Mode]
  63   1        /***********************************************************************
  64   1         - Disable Watchdog Timer
  65   1         - System clock divided by 12
  66   1         - PCA continues to function normally while the system controller is in
  67   1         Idle Mode
  68   1         - Disable the CF interrupt
  69   1         - Disable Watchdog Timer
  70   1         - Watchdog Timer Enable unlocked
  71   1         ***********************************************************************/
  72   1        SFRPAGE = 0x00;
  73   1        PCA0MD &= ~PCA0MD_WDTE__BMASK;
  74   1        PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL
  75   1            | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  76   1            | PCA0MD_WDLCK__UNLOCKED;
  77   1        // [PCA0MD - PCA Mode]$
  78   1      
  79   1        // $[PCA0H - PCA Counter/Timer High Byte]
  80   1        // [PCA0H - PCA Counter/Timer High Byte]$
  81   1      
  82   1        // $[PCA0L - PCA Counter/Timer Low Byte]
  83   1        // [PCA0L - PCA Counter/Timer Low Byte]$
  84   1      
  85   1        // $[PCA0CN0 - PCA Control 0]
  86   1        /***********************************************************************
  87   1         - Start the PCA Counter/Timer running
  88   1         ***********************************************************************/
  89   1        PCA0CN0 |= PCA0CN0_CR__RUN;
  90   1        // [PCA0CN0 - PCA Control 0]$
  91   1      
  92   1      }
  93          
  94          //================================================================================
  95          // PCACH_0_enter_DefaultMode_from_RESET
  96          //================================================================================
  97          extern void
  98          PCACH_0_enter_DefaultMode_from_RESET (void)
  99          {
 100   1        uint8_t PCA0CN0_CR_save = PCA0CN0 & PCA0CN0_CR__BMASK;
 101   1        PCA0CN0 |= PCA0CN0_CR_save;
 102   1      
 103   1        // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 104   1        /***********************************************************************
 105   1         - Disable negative edge capture
 106   1         - Disable CCF0 interrupts
 107   1         - Disable match function
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 3   

 108   1         - 8-bit PWM selected
 109   1         - Disable positive edge capture
 110   1         - Enable comparator function
 111   1         - Enable PWM function
 112   1         - Disable toggle function
 113   1         ***********************************************************************/
 114   1        PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 115   1            | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT | PCA0CPM0_CAPP__DISABLED
 116   1            | PCA0CPM0_ECOM__ENABLED | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 117   1        // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 118   1      
 119   1        // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 120   1        // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 121   1      
 122   1        // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 123   1        PCA0CPH0 = 0x00;
 124   1        // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 125   1      
 126   1        // $[PCA0 Start/Run restore]
 127   1        // [PCA0 Start/Run restore]$
 128   1      
 129   1      }
 130          
 131          //================================================================================
 132          // PCACH_1_enter_DefaultMode_from_RESET
 133          //================================================================================
 134          extern void
 135          PCACH_1_enter_DefaultMode_from_RESET (void)
 136          {
 137   1        uint8_t PCA0CN0_CR_save = PCA0CN0 & PCA0CN0_CR__BMASK;
 138   1        PCA0CN0 |= PCA0CN0_CR_save;
 139   1      
 140   1        // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 141   1        /***********************************************************************
 142   1         - Disable negative edge capture
 143   1         - Disable CCF1 interrupts
 144   1         - Disable match function
 145   1         - 8-bit PWM selected
 146   1         - Disable positive edge capture
 147   1         - Enable comparator function
 148   1         - Enable PWM function
 149   1         - Disable toggle function
 150   1         ***********************************************************************/
 151   1        PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 152   1            | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT | PCA0CPM1_CAPP__DISABLED
 153   1            | PCA0CPM1_ECOM__ENABLED | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 154   1        // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 155   1      
 156   1        // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 157   1        // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 158   1      
 159   1        // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 160   1        PCA0CPH1 = 0x00;
 161   1        // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 162   1      
 163   1        // $[PCA0 Start/Run restore]
 164   1        // [PCA0 Start/Run restore]$
 165   1      
 166   1      }
 167          
 168          //================================================================================
 169          // PCACH_2_enter_DefaultMode_from_RESET
 170          //================================================================================
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 4   

 171          extern void
 172          PCACH_2_enter_DefaultMode_from_RESET (void)
 173          {
 174   1        uint8_t PCA0CN0_CR_save = PCA0CN0 & PCA0CN0_CR__BMASK;
 175   1        PCA0CN0 |= PCA0CN0_CR_save;
 176   1      
 177   1        // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 178   1        /***********************************************************************
 179   1         - Disable negative edge capture
 180   1         - Disable CCF2 interrupts
 181   1         - Disable match function
 182   1         - 8-bit PWM selected
 183   1         - Disable positive edge capture
 184   1         - Enable comparator function
 185   1         - Enable PWM function
 186   1         - Disable toggle function
 187   1         ***********************************************************************/
 188   1        PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 189   1            | PCA0CPM2_MAT__DISABLED | PCA0CPM2_PWM16__8_BIT | PCA0CPM2_CAPP__DISABLED
 190   1            | PCA0CPM2_ECOM__ENABLED | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
 191   1        // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 192   1      
 193   1        // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 194   1        // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 195   1      
 196   1        // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 197   1        PCA0CPH2 = 0x00;
 198   1        // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 199   1      
 200   1        // $[PCA0 Start/Run restore]
 201   1        // [PCA0 Start/Run restore]$
 202   1      
 203   1      }
 204          
 205          //================================================================================
 206          // PORTS_0_enter_DefaultMode_from_RESET
 207          //================================================================================
 208          extern void
 209          PORTS_0_enter_DefaultMode_from_RESET (void)
 210          {
 211   1        // $[P0 - Port 0 Pin Latch]
 212   1        // [P0 - Port 0 Pin Latch]$
 213   1      
 214   1        // $[P0MDOUT - Port 0 Output Mode]
 215   1        /***********************************************************************
 216   1         - P0.0 output is open-drain
 217   1         - P0.1 output is push-pull
 218   1         - P0.2 output is open-drain
 219   1         - P0.3 output is open-drain
 220   1         - P0.4 output is open-drain
 221   1         - P0.5 output is open-drain
 222   1         - P0.6 output is push-pull
 223   1         - P0.7 output is open-drain
 224   1         ***********************************************************************/
 225   1        P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__PUSH_PULL
 226   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__OPEN_DRAIN
 227   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 228   1        // [P0MDOUT - Port 0 Output Mode]$
 229   1      
 230   1        // $[P0MDIN - Port 0 Input Mode]
 231   1        // [P0MDIN - Port 0 Input Mode]$
 232   1      
 233   1        // $[P0SKIP - Port 0 Skip]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 5   

 234   1        /***********************************************************************
 235   1         - P0.0 pin is skipped by the crossbar
 236   1         - P0.1 pin is skipped by the crossbar
 237   1         - P0.2 pin is skipped by the crossbar
 238   1         - P0.3 pin is skipped by the crossbar
 239   1         - P0.4 pin is skipped by the crossbar
 240   1         - P0.5 pin is skipped by the crossbar
 241   1         - P0.6 pin is not skipped by the crossbar
 242   1         - P0.7 pin is not skipped by the crossbar
 243   1         ***********************************************************************/
 244   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 245   1            | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 246   1            | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 247   1        // [P0SKIP - Port 0 Skip]$
 248   1      
 249   1      }
 250          
 251          //================================================================================
 252          // PORTS_1_enter_DefaultMode_from_RESET
 253          //================================================================================
 254          extern void
 255          PORTS_1_enter_DefaultMode_from_RESET (void)
 256          {
 257   1        // $[P1 - Port 1 Pin Latch]
 258   1        // [P1 - Port 1 Pin Latch]$
 259   1      
 260   1        // $[P1MDOUT - Port 1 Output Mode]
 261   1        /***********************************************************************
 262   1         - P1.0 output is push-pull
 263   1         - P1.1 output is open-drain
 264   1         - P1.2 output is open-drain
 265   1         - P1.3 output is open-drain
 266   1         - P1.4 output is push-pull
 267   1         - P1.5 output is open-drain
 268   1         - P1.6 output is open-drain
 269   1         - P1.7 output is push-pull
 270   1         ***********************************************************************/
 271   1        P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 272   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 273   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__PUSH_PULL;
 274   1        // [P1MDOUT - Port 1 Output Mode]$
 275   1      
 276   1        // $[P1MDIN - Port 1 Input Mode]
 277   1        /***********************************************************************
 278   1         - P1.0 pin is configured for digital mode
 279   1         - P1.1 pin is configured for digital mode
 280   1         - P1.2 pin is configured for digital mode
 281   1         - P1.3 pin is configured for digital mode
 282   1         - P1.4 pin is configured for digital mode
 283   1         - P1.5 pin is configured for analog mode
 284   1         - P1.6 pin is configured for digital mode
 285   1         - P1.7 pin is configured for digital mode
 286   1         ***********************************************************************/
 287   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 288   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__ANALOG
 289   1            | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 290   1        // [P1MDIN - Port 1 Input Mode]$
 291   1      
 292   1        // $[P1SKIP - Port 1 Skip]
 293   1        /***********************************************************************
 294   1         - P1.0 pin is not skipped by the crossbar
 295   1         - P1.1 pin is skipped by the crossbar
 296   1         - P1.2 pin is skipped by the crossbar
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 6   

 297   1         - P1.3 pin is skipped by the crossbar
 298   1         - P1.4 pin is skipped by the crossbar
 299   1         - P1.5 pin is skipped by the crossbar
 300   1         - P1.6 pin is skipped by the crossbar
 301   1         - P1.7 pin is not skipped by the crossbar
 302   1         ***********************************************************************/
 303   1        P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 304   1            | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 305   1            | P1SKIP_B6__SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 306   1        // [P1SKIP - Port 1 Skip]$
 307   1      
 308   1      }
 309          
 310          //================================================================================
 311          // PORTS_2_enter_DefaultMode_from_RESET
 312          //================================================================================
 313          extern void
 314          PORTS_2_enter_DefaultMode_from_RESET (void)
 315          {
 316   1        // $[P2 - Port 2 Pin Latch]
 317   1        // [P2 - Port 2 Pin Latch]$
 318   1      
 319   1        // $[P2MDOUT - Port 2 Output Mode]
 320   1        // [P2MDOUT - Port 2 Output Mode]$
 321   1      
 322   1        // $[P2MDIN - Port 2 Input Mode]
 323   1        /***********************************************************************
 324   1         - P2.0 pin is configured for digital mode
 325   1         - P2.1 pin is configured for digital mode
 326   1         - P2.2 pin is configured for digital mode
 327   1         - P2.3 pin is configured for digital mode
 328   1         - P2.4 pin is configured for digital mode
 329   1         - P2.5 pin is configured for analog mode
 330   1         - P2.6 pin is configured for analog mode
 331   1         - P2.7 pin is configured for digital mode
 332   1         ***********************************************************************/
 333   1        P2MDIN = P2MDIN_B0__DIGITAL | P2MDIN_B1__DIGITAL | P2MDIN_B2__DIGITAL
 334   1            | P2MDIN_B3__DIGITAL | P2MDIN_B4__DIGITAL | P2MDIN_B5__ANALOG
 335   1            | P2MDIN_B6__ANALOG | P2MDIN_B7__DIGITAL;
 336   1        // [P2MDIN - Port 2 Input Mode]$
 337   1      
 338   1        // $[P2SKIP - Port 2 Skip]
 339   1        /***********************************************************************
 340   1         - P2.0 pin is skipped by the crossbar
 341   1         - P2.1 pin is not skipped by the crossbar
 342   1         - P2.2 pin is not skipped by the crossbar
 343   1         - P2.3 pin is not skipped by the crossbar
 344   1         - P2.4 pin is not skipped by the crossbar
 345   1         - P2.5 pin is skipped by the crossbar
 346   1         - P2.6 pin is skipped by the crossbar
 347   1         - P2.7 pin is not skipped by the crossbar
 348   1         ***********************************************************************/
 349   1        P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED | P2SKIP_B2__NOT_SKIPPED
 350   1            | P2SKIP_B3__NOT_SKIPPED | P2SKIP_B4__NOT_SKIPPED | P2SKIP_B5__SKIPPED
 351   1            | P2SKIP_B6__SKIPPED | P2SKIP_B7__NOT_SKIPPED;
 352   1        // [P2SKIP - Port 2 Skip]$
 353   1      
 354   1      }
 355          
 356          //================================================================================
 357          // PBCFG_0_enter_DefaultMode_from_RESET
 358          //================================================================================
 359          extern void
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 7   

 360          PBCFG_0_enter_DefaultMode_from_RESET (void)
 361          {
 362   1        // $[XBR1 - Port I/O Crossbar 1]
 363   1        /***********************************************************************
 364   1         - Weak Pullups enabled 
 365   1         - Crossbar enabled
 366   1         - All PCA I/O unavailable at Port pins
 367   1         - ECI unavailable at Port pin
 368   1         - T0 unavailable at Port pin
 369   1         - T1 unavailable at Port pin
 370   1         ***********************************************************************/
 371   1        XBR1 = XBR1_WEAKPUD__PULL_UPS_ENABLED | XBR1_XBARE__ENABLED
 372   1            | XBR1_PCA0ME__DISABLED | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 373   1            | XBR1_T1E__DISABLED;
 374   1        // [XBR1 - Port I/O Crossbar 1]$
 375   1      
 376   1        // $[XBR0 - Port I/O Crossbar 0]
 377   1        /***********************************************************************
 378   1         - UART0 I/O unavailable at Port pin
 379   1         - SPI I/O routed to Port pins
 380   1         - SMBus 0 I/O unavailable at Port pins
 381   1         - CP0 unavailable at Port pin
 382   1         - Asynchronous CP0 unavailable at Port pin
 383   1         - CP1 unavailable at Port pin
 384   1         - Asynchronous CP1 unavailable at Port pin
 385   1         - SYSCLK unavailable at Port pin
 386   1         ***********************************************************************/
 387   1        XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 388   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 389   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 390   1        // [XBR0 - Port I/O Crossbar 0]$
 391   1      
 392   1        // $[XBR2 - Port I/O Crossbar 2]
 393   1        /***********************************************************************
 394   1         - UART1 TX, RX routed to Port pins
 395   1         - SMBus1 I/O unavailable at Port pins
 396   1         ***********************************************************************/
 397   1        XBR2 = XBR2_URT1E__ENABLED | XBR2_SMB1E__DISABLED;
 398   1        // [XBR2 - Port I/O Crossbar 2]$
 399   1      
 400   1      }
 401          
 402          //================================================================================
 403          // HFOSC_0_enter_DefaultMode_from_RESET
 404          //================================================================================
 405          extern void
 406          HFOSC_0_enter_DefaultMode_from_RESET (void)
 407          {
 408   1        // $[HFO0CN - High Frequency Oscillator Control]
 409   1        /***********************************************************************
 410   1         - SYSCLK can be derived from Internal H-F Oscillator divided by 2 
 411   1         ***********************************************************************/
 412   1        HFO0CN &= ~HFO0CN_IFCN__FMASK;
 413   1        HFO0CN |= HFO0CN_IFCN__SYSCLK_DIV_2;
 414   1        // [HFO0CN - High Frequency Oscillator Control]$
 415   1      
 416   1      }
 417          
 418          //================================================================================
 419          // CLOCK_0_enter_DefaultMode_from_RESET
 420          //================================================================================
 421          extern void
 422          CLOCK_0_enter_DefaultMode_from_RESET (void)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 8   

 423          {
 424   1        // $[CLKSEL - Clock Select]
 425   1        // [CLKSEL - Clock Select]$
 426   1      
 427   1      }
 428          /*
 429           //================================================================================
 430           // TIMER01_0_enter_DefaultMode_from_RESET
 431           //================================================================================
 432           extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 433           // $[Timer Initialization]
 434           //Save Timer Configuration
 435           uint8_t TCON_save;
 436           TCON_save = TCON;
 437           //Stop Timers
 438           TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 439          
 440           // [Timer Initialization]$
 441          
 442           // $[TH0 - Timer 0 High Byte]
 443           // [TH0 - Timer 0 High Byte]$
 444          
 445           // $[TL0 - Timer 0 Low Byte]
 446           /***********************************************************************
 447           - Timer 0 Low Byte = 0x06
 448           ***********************************************************************/
 449          /*
 450           TL0 = (0x06 << TL0_TL0__SHIFT);
 451           // [TL0 - Timer 0 Low Byte]$
 452          
 453           // $[TH1 - Timer 1 High Byte]
 454           // [TH1 - Timer 1 High Byte]$
 455          
 456           // $[TL1 - Timer 1 Low Byte]
 457           // [TL1 - Timer 1 Low Byte]$
 458          
 459           // $[Timer Restoration]
 460           //Restore Timer Configuration
 461           TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 462          
 463           // [Timer Restoration]$
 464          
 465           }
 466           */
 467          //================================================================================
 468          // TIMER16_3_enter_DefaultMode_from_RESET
 469          //================================================================================
 470          extern void
 471          TIMER16_3_enter_DefaultMode_from_RESET (void)
 472          {
 473   1        // $[Timer Initialization]
 474   1        // Save Timer Configuration
 475   1        uint8_t TMR3CN0_TR3_save;
 476   1        TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 477   1        // Stop Timer
 478   1        TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 479   1        // [Timer Initialization]$
 480   1      
 481   1        // $[TMR3CN0 - Timer 3 Control]
 482   1        // [TMR3CN0 - Timer 3 Control]$
 483   1      
 484   1        // $[TMR3H - Timer 3 High Byte]
 485   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 9   

 486   1         - Timer 3 High Byte = 0xF8
 487   1         ***********************************************************************/
 488   1        TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 489   1        // [TMR3H - Timer 3 High Byte]$
 490   1      
 491   1        // $[TMR3L - Timer 3 Low Byte]
 492   1        /***********************************************************************
 493   1         - Timer 3 Low Byte = 0x30
 494   1         ***********************************************************************/
 495   1        TMR3L = (0x30 << TMR3L_TMR3L__SHIFT);
 496   1        // [TMR3L - Timer 3 Low Byte]$
 497   1      
 498   1        // $[TMR3RLH - Timer 3 Reload High Byte]
 499   1        /***********************************************************************
 500   1         - Timer 3 Reload High Byte = 0xFE
 501   1         ***********************************************************************/
 502   1        TMR3RLH = (0xFE << TMR3RLH_TMR3RLH__SHIFT);
 503   1        // [TMR3RLH - Timer 3 Reload High Byte]$
 504   1      
 505   1        // $[TMR3RLL - Timer 3 Reload Low Byte]
 506   1        /***********************************************************************
 507   1         - Timer 3 Reload Low Byte = 0x0C
 508   1         ***********************************************************************/
 509   1        TMR3RLL = (0x0C << TMR3RLL_TMR3RLL__SHIFT);
 510   1        // [TMR3RLL - Timer 3 Reload Low Byte]$
 511   1      
 512   1        // $[TMR3CN0]
 513   1        /***********************************************************************
 514   1         - Start Timer 3 running
 515   1         ***********************************************************************/
 516   1        TMR3CN0 |= TMR3CN0_TR3__RUN;
 517   1        // [TMR3CN0]$
 518   1      
 519   1        // $[Timer Restoration]
 520   1        // Restore Timer Configuration
 521   1        TMR3CN0 |= TMR3CN0_TR3_save;
 522   1        // [Timer Restoration]$
 523   1      
 524   1      }
 525          
 526          //================================================================================
 527          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 528          //================================================================================
 529          extern void
 530          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 531          {
 532   1        // $[CKCON0 - Clock Control 0]
 533   1        /***********************************************************************
 534   1         - System clock divided by 48
 535   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 536   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 537   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 538   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 539   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 540   1         - Timer 1 uses the clock defined by the prescale field, SCA
 541   1         ***********************************************************************/
 542   1        SFRPAGE = 0x00;
 543   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 544   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 545   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 546   1            | CKCON0_T1M__PRESCALE;
 547   1        // [CKCON0 - Clock Control 0]$
 548   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 10  

 549   1        // $[CKCON1 - Clock Control 1]
 550   1        // [CKCON1 - Clock Control 1]$
 551   1      
 552   1        // $[TMOD - Timer 0/1 Mode]
 553   1        /***********************************************************************
 554   1         - Mode 1, 16-bit Counter/Timer
 555   1         - Mode 1, 16-bit Counter/Timer
 556   1         - Timer Mode
 557   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 558   1         - Timer Mode
 559   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 560   1         ***********************************************************************/
 561   1        TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE1 | TMOD_CT0__TIMER
 562   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 563   1        // [TMOD - Timer 0/1 Mode]$
 564   1      
 565   1        // $[TCON - Timer 0/1 Control]
 566   1        /***********************************************************************
 567   1         - Start Timer 0 running
 568   1         - Start Timer 1 running
 569   1         ***********************************************************************/
 570   1        TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 571   1        // [TCON - Timer 0/1 Control]$
 572   1      
 573   1      }
 574          
 575          //================================================================================
 576          // SPI_0_enter_DefaultMode_from_RESET
 577          //================================================================================
 578          extern void
 579          SPI_0_enter_DefaultMode_from_RESET (void)
 580          {
 581   1        // $[SPI0CKR - SPI0 Clock Rate]
 582   1        /***********************************************************************
 583   1         - SPI0 Clock Rate = 0x02
 584   1         ***********************************************************************/
 585   1        SPI0CKR = (0x02 << SPI0CKR_SPI0CKR__SHIFT);
 586   1        // [SPI0CKR - SPI0 Clock Rate]$
 587   1      
 588   1        // $[SPI0CFG - SPI0 Configuration]
 589   1        /***********************************************************************
 590   1         - Enable master mode. Operate as a master
 591   1         ***********************************************************************/
 592   1        SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 593   1        // [SPI0CFG - SPI0 Configuration]$
 594   1      
 595   1        // $[SPI0CN0 - SPI0 Control]
 596   1        /***********************************************************************
 597   1         - Enable the SPI module
 598   1         - 3-Wire Slave or 3-Wire Master Mode
 599   1         ***********************************************************************/
 600   1        SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 601   1        SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 602   1        // [SPI0CN0 - SPI0 Control]$
 603   1      
 604   1      }
 605          
 606          //================================================================================
 607          // INTERRUPT_0_enter_DefaultMode_from_RESET
 608          //================================================================================
 609          extern void
 610          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 611          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 11  

 612   1        // $[EIE1 - Extended Interrupt Enable 1]
 613   1        /***********************************************************************
 614   1         - Disable ADC0 Conversion Complete interrupt
 615   1         - Disable ADC0 Window Comparison interrupt
 616   1         - Disable CP0 interrupts
 617   1         - Disable CP1 interrupts
 618   1         - Disable all PCA0 interrupts
 619   1         - Disable all SMB0 interrupts
 620   1         - Enable interrupt requests generated by the TF3L or TF3H flags
 621   1         - Disable all USB0 interrupts
 622   1         ***********************************************************************/
 623   1        EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 624   1            | EIE1_ECP1__DISABLED | EIE1_EPCA0__DISABLED | EIE1_ESMB0__DISABLED
 625   1            | EIE1_ET3__ENABLED | EIE1_EUSB0__DISABLED;
 626   1        // [EIE1 - Extended Interrupt Enable 1]$
 627   1      
 628   1        // $[EIP1 - Extended Interrupt Priority 1]
 629   1        // [EIP1 - Extended Interrupt Priority 1]$
 630   1      
 631   1        // $[IE - Interrupt Enable]
 632   1        /***********************************************************************
 633   1         - Enable each interrupt according to its individual mask setting
 634   1         - Disable external interrupt 0
 635   1         - Disable external interrupt 1
 636   1         - Enable interrupt requests generated by SPI0
 637   1         - Disable all Timer 0 interrupt
 638   1         - Disable all Timer 1 interrupt
 639   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 640   1         - Disable UART0 interrupt
 641   1         ***********************************************************************/
 642   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__ENABLED
 643   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 644   1            | IE_ES0__DISABLED;
 645   1        // [IE - Interrupt Enable]$
 646   1      
 647   1        // $[IP - Interrupt Priority]
 648   1        // [IP - Interrupt Priority]$
 649   1      
 650   1        // $[EIE2 - Extended Interrupt Enable 2]
 651   1        // [EIE2 - Extended Interrupt Enable 2]$
 652   1      
 653   1        // $[EIP2 - Extended Interrupt Priority 2]
 654   1        // [EIP2 - Extended Interrupt Priority 2]$
 655   1      
 656   1      }
 657          
 658          extern void
 659          CIP51_0_enter_DefaultMode_from_RESET (void)
 660          {
 661   1      
 662   1        // $[PFE0CN - Prefetch Engine Control]
 663   1        /***********************************************************************
 664   1         - Each byte of a firmware flash write is written individually
 665   1         - Disable the prefetch engine 
 666   1         ***********************************************************************/
 667   1        PFE0CN = PFE0CN_FLBWE__BLOCK_WRITE_DISABLED | PFE0CN_PFEN__DISABLED;
 668   1        // [PFE0CN - Prefetch Engine Control]$
 669   1      
 670   1      }
 671          
 672          extern void
 673          TIMER01_0_enter_DefaultMode_from_RESET (void)
 674          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 12  

 675   1        // $[Timer Initialization]
 676   1        //Save Timer Configuration
 677   1        uint8_t TCON_save;
 678   1        TCON_save = TCON;
 679   1        //Stop Timers
 680   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 681   1      
 682   1        // [Timer Initialization]$
 683   1      
 684   1        // $[TH0 - Timer 0 High Byte]
 685   1        /***********************************************************************
 686   1         - Timer 0 High Byte = 0x0B
 687   1         ***********************************************************************/
 688   1        TH0 = (0x0B << TH0_TH0__SHIFT);
 689   1        // [TH0 - Timer 0 High Byte]$
 690   1      
 691   1        // $[TL0 - Timer 0 Low Byte]
 692   1        /***********************************************************************
 693   1         - Timer 0 Low Byte = 0xDC
 694   1         ***********************************************************************/
 695   1        TL0 = (0xDC << TL0_TL0__SHIFT);
 696   1        // [TL0 - Timer 0 Low Byte]$
 697   1      
 698   1        // $[TH1 - Timer 1 High Byte]
 699   1        /***********************************************************************
 700   1         - Timer 1 High Byte = 0xFE
 701   1         ***********************************************************************/
 702   1        TH1 = (0xFE << TH1_TH1__SHIFT);
 703   1        // [TH1 - Timer 1 High Byte]$
 704   1      
 705   1        // $[TL1 - Timer 1 Low Byte]
 706   1        /***********************************************************************
 707   1         - Timer 1 Low Byte = 0xE4
 708   1         ***********************************************************************/
 709   1        TL1 = (0xE4 << TL1_TL1__SHIFT);
 710   1        // [TL1 - Timer 1 Low Byte]$
 711   1      
 712   1        // $[Timer Restoration]
 713   1        //Restore Timer Configuration
 714   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 715   1      
 716   1        // [Timer Restoration]$
 717   1      
 718   1      }
 719          
 720          extern void
 721          ADC_0_enter_DefaultMode_from_RESET (void)
 722          {
 723   1        // $[ADC0CF - ADC0 Configuration]
 724   1        /***********************************************************************
 725   1         - Data in the ADC0H:ADC0L registers is right-justified
 726   1         - SAR Clock Divider = 0x00
 727   1         ***********************************************************************/
 728   1        ADC0CF = ADC0CF_ADLJST__RIGHT_JUSTIFIED | (0x00 << ADC0CF_ADSC__SHIFT);
 729   1        // [ADC0CF - ADC0 Configuration]$
 730   1      
 731   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 732   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 733   1      
 734   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 735   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 736   1      
 737   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 13  

 738   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 739   1      
 740   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 741   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 742   1      
 743   1        // $[AMX0N - AMUX0 Negative Multiplexer Selection]
 744   1        /***********************************************************************
 745   1         - Ground 
 746   1         ***********************************************************************/
 747   1        AMX0N = AMX0N_AMX0N__GND;
 748   1        // [AMX0N - AMUX0 Negative Multiplexer Selection]$
 749   1      
 750   1        // $[AMX0P - AMUX0 Positive Multiplexer Selection]
 751   1        /***********************************************************************
 752   1         - Temperature sensor
 753   1         ***********************************************************************/
 754   1        AMX0P = AMX0P_AMX0P__TEMP;
 755   1        // [AMX0P - AMUX0 Positive Multiplexer Selection]$
 756   1      
 757   1        // $[ADC0CN0 - ADC0 Control]
 758   1        /***********************************************************************
 759   1         - ADC0 Enabled 
 760   1         ***********************************************************************/
 761   1        ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 762   1        // [ADC0CN0 - ADC0 Control]$
 763   1      
 764   1      }
 765          
 766          extern void
 767          VREF_0_enter_DefaultMode_from_RESET (void)
 768          {
 769   1        // $[REF0CN - Voltage Reference Control]
 770   1        /***********************************************************************
 771   1         - Enable the internal Temperature Sensor
 772   1         - Enable the internal reference buffer
 773   1         - The on-chip voltage reference buffer gain is 1
 774   1         - The REFSL bit selects the voltage reference source
 775   1         - Use the VREF pin as the voltage reference
 776   1         ***********************************************************************/
 777   1        REF0CN = REF0CN_TEMPE__ENABLED | REF0CN_REFBE__ENABLED | REF0CN_REFBGS__GAIN_1
 778   1            | REF0CN_REGOVR__REFSL | REF0CN_REFSL__VREF;
 779   1        // [REF0CN - Voltage Reference Control]$
 780   1      
 781   1      }
 782          
 783          extern void
 784          RSTSRC_0_enter_DefaultMode_from_RESET (void)
 785          {
 786   1        // $[RSTSRC - Reset Source]
 787   1        /***********************************************************************
 788   1         - A power-on or supply monitor reset occurred
 789   1         - A missing clock detector reset occurred
 790   1         - A Comparator 0 reset did not occur
 791   1         - A USB0 reset did not occur
 792   1         ***********************************************************************/
 793   1        RSTSRC = RSTSRC_PORSF__SET | RSTSRC_MCDRSF__SET | RSTSRC_C0RSEF__NOT_SET
 794   1            | RSTSRC_USBRSF__NOT_SET;
 795   1        // [RSTSRC - Reset Source]$
 796   1      
 797   1      }
 798          
 799          extern void
 800          PORTS_3_enter_DefaultMode_from_RESET (void)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 14  

 801          {
 802   1        // $[P3 - Port 3 Pin Latch]
 803   1        /***********************************************************************
 804   1         - P3.0 is high. Set P3.0 to drive or float high
 805   1         - P3.1 is high. Set P3.1 to drive or float high
 806   1         - P3.2 is high. Set P3.2 to drive or float high
 807   1         - P3.3 is high. Set P3.3 to drive or float high
 808   1         - P3.4 is high. Set P3.4 to drive or float high
 809   1         - P3.5 is high. Set P3.5 to drive or float high
 810   1         - P3.6 is high. Set P3.6 to drive or float high
 811   1         - P3.7 is low. Set P3.7 to drive low
 812   1         ***********************************************************************/
 813   1        P3 = P3_B0__HIGH | P3_B1__HIGH | P3_B2__HIGH | P3_B3__HIGH | P3_B4__HIGH
 814   1            | P3_B5__HIGH | P3_B6__HIGH | P3_B7__LOW;
 815   1        // [P3 - Port 3 Pin Latch]$
 816   1      
 817   1        // $[P3MDOUT - Port 3 Output Mode]
 818   1        /***********************************************************************
 819   1         - P3.0 output is open-drain
 820   1         - P3.1 output is open-drain
 821   1         - P3.2 output is open-drain
 822   1         - P3.3 output is open-drain
 823   1         - P3.4 output is open-drain
 824   1         - P3.5 output is open-drain
 825   1         - P3.6 output is open-drain
 826   1         - P3.7 output is push-pull
 827   1         ***********************************************************************/
 828   1        P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 829   1            | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN | P3MDOUT_B4__OPEN_DRAIN
 830   1            | P3MDOUT_B5__OPEN_DRAIN | P3MDOUT_B6__OPEN_DRAIN | P3MDOUT_B7__PUSH_PULL;
 831   1        // [P3MDOUT - Port 3 Output Mode]$
 832   1      
 833   1        // $[P3MDIN - Port 3 Input Mode]
 834   1        /***********************************************************************
 835   1         - P3.0 pin is configured for digital mode
 836   1         - P3.1 pin is configured for digital mode
 837   1         - P3.2 pin is configured for digital mode
 838   1         - P3.3 pin is configured for digital mode
 839   1         - P3.4 pin is configured for digital mode
 840   1         - P3.5 pin is configured for digital mode
 841   1         - P3.6 pin is configured for analog mode
 842   1         - P3.7 pin is configured for digital mode
 843   1         ***********************************************************************/
 844   1        P3MDIN = P3MDIN_B0__DIGITAL | P3MDIN_B1__DIGITAL | P3MDIN_B2__DIGITAL
 845   1            | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B5__DIGITAL
 846   1            | P3MDIN_B6__ANALOG | P3MDIN_B7__DIGITAL;
 847   1        // [P3MDIN - Port 3 Input Mode]$
 848   1      
 849   1        // $[P3SKIP - Port 3 Skip]
 850   1        /***********************************************************************
 851   1         - P3.0 pin is not skipped by the crossbar
 852   1         - P3.1 pin is not skipped by the crossbar
 853   1         - P3.2 pin is not skipped by the crossbar
 854   1         - P3.3 pin is not skipped by the crossbar
 855   1         - P3.4 pin is not skipped by the crossbar
 856   1         - P3.5 pin is not skipped by the crossbar
 857   1         - P3.6 pin is skipped by the crossbar
 858   1         - P3.7 pin is skipped by the crossbar
 859   1         ***********************************************************************/
 860   1        P3SKIP = P3SKIP_B0__NOT_SKIPPED | P3SKIP_B1__NOT_SKIPPED
 861   1            | P3SKIP_B2__NOT_SKIPPED | P3SKIP_B3__NOT_SKIPPED | P3SKIP_B4__NOT_SKIPPED
 862   1            | P3SKIP_B5__NOT_SKIPPED | P3SKIP_B6__SKIPPED | P3SKIP_B7__SKIPPED;
 863   1        // [P3SKIP - Port 3 Skip]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 15  

 864   1      
 865   1      }
 866          
 867          extern void
 868          TIMER16_5_enter_DefaultMode_from_RESET (void)
 869          {
 870   1        // $[Timer Initialization]
 871   1        // Save Timer Configuration
 872   1        uint8_t TMR5CN0_TR5_save;
 873   1        SFRPAGE = 0x0F;
 874   1        TMR5CN0_TR5_save = TMR5CN0 & TMR5CN0_TR5__BMASK;
 875   1        // Stop Timer
 876   1        TMR5CN0 &= ~(TMR5CN0_TR5__BMASK);
 877   1        // [Timer Initialization]$
 878   1      
 879   1        // $[TMR5CN0 - Timer 5 Control]
 880   1        /***********************************************************************
 881   1         - Timer 5 operates as two 8-bit auto-reload timers
 882   1         ***********************************************************************/
 883   1        TMR5CN0 |= TMR5CN0_T5SPLIT__8_BIT_RELOAD;
 884   1        // [TMR5CN0 - Timer 5 Control]$
 885   1      
 886   1        // $[TMR5H - Timer 5 High Byte]
 887   1        // [TMR5H - Timer 5 High Byte]$
 888   1      
 889   1        // $[TMR5L - Timer 5 Low Byte]
 890   1        /***********************************************************************
 891   1         - Timer 5 Low Byte = 0x96
 892   1         ***********************************************************************/
 893   1        TMR5L = (0x96 << TMR5L_TMR5L__SHIFT);
 894   1        // [TMR5L - Timer 5 Low Byte]$
 895   1      
 896   1        // $[TMR5RLH - Timer 5 Reload High Byte]
 897   1        // [TMR5RLH - Timer 5 Reload High Byte]$
 898   1      
 899   1        // $[TMR5RLL - Timer 5 Reload Low Byte]
 900   1        // [TMR5RLL - Timer 5 Reload Low Byte]$
 901   1      
 902   1        // $[TMR5CN0]
 903   1        // [TMR5CN0]$
 904   1      
 905   1        // $[Timer Restoration]
 906   1        // Restore Timer Configuration
 907   1        TMR5CN0 |= TMR5CN0_TR5_save;
 908   1        // [Timer Restoration]$
 909   1      
 910   1      }
 911          
 912          extern void
 913          UARTE_1_enter_DefaultMode_from_RESET (void)
 914          {
 915   1        // $[SBCON1 - UART1 Baud Rate Generator Control]
 916   1        /***********************************************************************
 917   1         - Enable the baud rate generator
 918   1         - Prescaler = 1
 919   1         ***********************************************************************/
 920   1        SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 921   1        // [SBCON1 - UART1 Baud Rate Generator Control]$
 922   1      
 923   1        // $[SMOD1 - UART1 Mode]
 924   1        // [SMOD1 - UART1 Mode]$
 925   1      
 926   1        // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/02/2022 15:42:40 PAGE 16  

 927   1        /***********************************************************************
 928   1         - UART1 Baud Rate Reload High = 0xFE
 929   1         ***********************************************************************/
 930   1        SBRLH1 = (0xFE << SBRLH1_BRH__SHIFT);
 931   1        // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 932   1      
 933   1        // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 934   1        /***********************************************************************
 935   1         - UART1 Baud Rate Reload Low = 0xC8
 936   1         ***********************************************************************/
 937   1        SBRLL1 = (0xC8 << SBRLL1_BRL__SHIFT);
 938   1        // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 939   1      
 940   1        // $[SCON1 - UART1 Serial Port Control]
 941   1        // [SCON1 - UART1 Serial Port Control]$
 942   1      
 943   1      }
 944          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
