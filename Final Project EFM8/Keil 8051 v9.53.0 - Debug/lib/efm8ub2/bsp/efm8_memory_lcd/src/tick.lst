C51 COMPILER V9.60.0.0   TICK                                                              05/02/2022 15:42:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TICK
OBJECT MODULE PLACED IN .\lib\efm8ub2\bsp\efm8_memory_lcd\src\tick.OBJ
COMPILER INVOKED BY: C:\SimplicityStudio\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\SimplicityStudio\developer\s
                    -dks\8051\v4.2.3\Device\EFM8UB2\bsp\efm8_memory_lcd\tick.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOAT
                    -FUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\danih\OneDrive - ort braude college of engineeri
                    -ng\Desktop\מיקרו בקרים\v5_workspace\Middle Project\inc;C:\Users\danih\OneDrive - ort braude college of engineering\Deskt
                    -op\מיקרו בקרים\v5_workspace\Middle Project\inc\config;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/driver
                    -s/efm8_memory_lcd/inc;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C
                    -:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SimplicityStudio/develo
                    -per/sdks/8051/v4.2.3//kits/common/bsp;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/EFM8UB2_SLSTK2001A/config;C:/
                    -SimplicityStudio/developer/sdks/8051/v4.2.3//Device/shared/si8051Base;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//De
                    -vice/EFM8UB2/inc;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//kits/common/drivers/efm8_joystick;C:/SimplicityStudio/d
                    -eveloper/sdks/8051/v4.2.3//kits/common/drivers/efm8_rgb_led;C:/SimplicityStudio/developer/sdks/8051/v4.2.3//Device/EFM8U
                    -B2/peripheral_driver/inc) PRINT(.\lib\efm8ub2\bsp\efm8_memory_lcd\src\tick.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJEC
                    -T(.\lib\efm8ub2\bsp\efm8_memory_lcd\src\tick.OBJ)

line level    source

   1          /**************************************************************************//**
   2           * Copyright (c) 2015 by Silicon Laboratories Inc. All rights reserved.
   3           *
   4           * http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   5           *****************************************************************************/
   6          /////////////////////////////////////////////////////////////////////////////
   7          // Tick.c
   8          /////////////////////////////////////////////////////////////////////////////
   9          
  10          /////////////////////////////////////////////////////////////////////////////
  11          // Includes
  12          /////////////////////////////////////////////////////////////////////////////
  13          
  14          #include "bsp.h"
  15          #include "tick.h"
  16          
  17          /////////////////////////////////////////////////////////////////////////////
  18          // Globals
  19          /////////////////////////////////////////////////////////////////////////////
  20          
  21          static volatile uint16_t Ticks = 0;
  22          
  23          /////////////////////////////////////////////////////////////////////////////
  24          // Functions
  25          /////////////////////////////////////////////////////////////////////////////
  26          
  27          //---------------------------------------------------------------------------
  28          // GetTickCount
  29          //---------------------------------------------------------------------------
  30          //
  31          // Description - Return the system up time in milliseconds
  32          //
  33          // return - Number of milliseconds since system start.
  34          //
  35          uint16_t GetTickCount()
  36          {
  37   1          uint16_t ticks;
  38   1      
  39   1          // Disable Timer 3 interrupts
  40   1          EIE1 &= ~EIE1_ET3__BMASK;
  41   1      
  42   1          ticks = Ticks;
  43   1      
  44   1          // Enable Timer 3 interrupts
C51 COMPILER V9.60.0.0   TICK                                                              05/02/2022 15:42:42 PAGE 2   

  45   1          EIE1 |= EIE1_ET3__BMASK;
  46   1      
  47   1          return ticks;
  48   1      }
  49          
  50          //---------------------------------------------------------------------------
  51          // Wait
  52          //---------------------------------------------------------------------------
  53          //
  54          // Description - Wait the specified number of milliseconds
  55          //
  56          // ms - The number of milliseconds to wait
  57          //
  58          void Wait(uint16_t ms)
  59          {
  60   1          uint16_t ticks = GetTickCount();
  61   1          while ((GetTickCount() - ticks) < ms);
  62   1      }
  63          
  64          uint16_t Wait2(uint16_t ms)
  65          {
  66   1          uint16_t ticks = GetTickCount();
  67   1          uint16_t test=0;
  68   1          while ((GetTickCount() - ticks) < ms){
  69   2              test++;
  70   2          }
  71   1          return test;
  72   1      }
  73          
  74          //-----------------------------------------------------------------------------
  75          // TIMER3_ISR
  76          //-----------------------------------------------------------------------------
  77          //
  78          // TIMER3 ISR Content goes here. Remember to clear flag bits:
  79          // TMR3CN::TF3H (Timer # High Byte Overflow Flag)
  80          // TMR3CN::TF3L (Timer # Low Byte Overflow Flag)
  81          //
  82          //-----------------------------------------------------------------------------
  83          SI_INTERRUPT(TIMER3_ISR, TIMER3_IRQn)
  84          {
  85   1          // Overflows every 1 ms
  86   1          TMR3CN0 &= ~TMR3CN0_TF3H__BMASK;
  87   1      
  88   1          Ticks++;
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     98    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
